{"version":3,"sources":["components/SearchBar.js","utils/addCommas.js","components/VideoDetail.js","utils/formatDescription.js","utils/convertDate.js","components/VideoItem.js","utils/formatViewCount.js","components/VideoList.js","components/DarkMode.js","api/youtube.js","App.js","index.js"],"names":["SearchBar","state","searchTerm","handleChange","event","target","name","value","setState","handleSubmit","onFormSubmit","props","preventDefault","Paper","elevation","onSubmit","this","className","TextField","fullWidth","placeholder","onChange","React","Component","addCommas","x","toString","replace","VideoDetail","video","darkMode","Typography","variant","str","videoSrc","id","statistics","viewCount","likeCount","dislikeCount","snippet","title","channelTitle","publishedAt","description","Fragment","frameBorder","height","width","src","Grid","item","xs","alignItems","container","spacing","ThumbUp","ThumbDown","Divider","alt","thumbnails","medium","url","date","day","substring","month","parseInt","year","convertDate","split","map","key","VideoItem","onVideoSelect","onClick","Math","round","VideoList","videos","listOfVideos","DarkMode","justify","Switch","color","axios","create","baseURL","App","selectedVideo","a","youtube","get","params","part","maxResults","process","type","q","responseSnippet","items","data","videoId","join","responseStats","channelId","responseChannel","channelSnippet","responseTotal","Object","assign","find","stat","channel","theme","createMuiTheme","palette","MuiThemeProvider","Helmet","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e35503c9.chunk.js","sourcesContent":["import React from 'react'\nimport { Paper, TextField } from '@material-ui/core'\n\n    class SearchBar extends React.Component {\n        state = {\n            searchTerm: '',\n        }\n\n    handleChange = (event) => {\n        const {name, value} = event.target\n            this.setState({\n              [name]: value\n        })\n    }\n\n    handleSubmit = (event) => {\n        const { searchTerm } = this.state\n        const { onFormSubmit } = this.props\n\n        onFormSubmit(searchTerm)\n\n        event.preventDefault()\n    }\n\n    render() {\n\n        return (\n            <Paper elevation={6}>\n                <form onSubmit={this.handleSubmit} className=\"searchBar\">\n                    <TextField\n                        fullWidth\n                        placeholder=\"Search...\"\n                        name=\"searchTerm\"\n                        value={this.state.searchTerm}\n                        onChange={this.handleChange}\n                    />\n                </form>\n            </Paper>\n        )\n    }\n\n}\n\nexport default SearchBar","export function addCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}","import React from 'react'\nimport Linkify from 'react-linkify'\nimport { addCommas } from '../utils/addCommas'\nimport { convertDate } from '../utils/convertDate'\nimport { formatDescription } from '../utils/formatDescription'\nimport  { Grid, Paper, Typography, Divider } from '@material-ui/core'\nimport { ThumbUp, ThumbDown } from '@material-ui/icons';\n\nconst VideoDetail = ({ video, darkMode }) => {\n\n    if(!video) return <Typography variant=\"h6\">Loading...</Typography>\n\n    const videoSrc = `https://www.youtube.com/embed/${video.id}`\n\n    const { viewCount, likeCount, dislikeCount } = video.statistics\n    const { title, channelTitle, publishedAt, description } = video.snippet\n\n    return (\n        <React.Fragment>\n            <Paper elevation={6} className=\"videoContainer\">\n                <iframe frameBorder=\"0\" height=\"100%\" width=\"100%\" title=\"Video Player\" src={videoSrc} className=\"iframe\"/>\n                <Grid item xs={12}>\n                    <Typography variant=\"h6\">{title}</Typography>\n                </Grid>\n                <Grid alignItems=\"center\" container spacing={2} className=\"stats\">\n                    <Grid item xs={7}>\n                        <Typography variant=\"subtitle1\">{addCommas(viewCount)} views</Typography>\n                    </Grid>\n                    <ThumbUp></ThumbUp>\n                    <Grid item xs={1}>\n                        <Typography>{addCommas(likeCount)}</Typography>\n                    </Grid>\n                    <Grid item xs={1}>\n                    </Grid>\n                    <ThumbDown></ThumbDown>\n                    <Grid item xs={1}>\n                        <Typography>{addCommas(dislikeCount)}</Typography>\n                    </Grid>\n                </Grid>\n                <Divider variant=\"middle\" />\n                <Grid alignItems=\"center\" container spacing={2} >\n                    <Grid item xs={1}>\n                        <img alt=\"thumbnail\" src={video.thumbnails.medium.url} className=\"channelImg\"/>\n                     </Grid>\n                     <Grid item xs={4}>\n                        <Typography variant=\"subtitle1\">{channelTitle}</Typography>\n                        <Typography variant=\"subtitle2\">Published on {convertDate(publishedAt)}</Typography>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={1}>\n                    </Grid>\n                    <Grid item xs={11}>\n                        <Linkify>\n                            <Typography variant=\"subtitle2\">\n                                {formatDescription(description).map((item, id) => <p key={id}>{item}</p>)}\n                            </Typography>\n                        </Linkify>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </React.Fragment>\n    )\n}\n\nexport default VideoDetail","export function formatDescription(str) {\n  const strArr = str.split('\\n')\n  return strArr\n}","export function convertDate(date) {\n\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\n  const day = date.substring(8, 10)\n  const month = parseInt(date.substring(5, 7)) - 1\n  const year = date.substring(0, 4)\n\n  const monthName = months[month]\n\n  return `${monthName} ${day}, ${year}`\n}","import React from 'react'\nimport { Grid, Paper, Typography } from '@material-ui/core'\nimport { formatViewCount } from '../utils/formatViewCount'\n\nconst VideoItem = ({ video, onVideoSelect }) => {\n\n    return (\n        <Grid item xs={12}>\n            <Paper className=\"videoItem\" onClick={() => {onVideoSelect(video)}}>\n                <img className=\"videoImg\" alt=\"thumbnail\" src={video.snippet.thumbnails.medium.url}/>\n                <Typography className=\"videoItemTitle\" variant=\"subtitle1\">\n                    <b>{video.snippet.title}...</b>\n                    <Typography>{video.snippet.channelTitle}</Typography>\n                    <Typography>{formatViewCount(video.statistics.viewCount)} views</Typography>\n                </Typography>\n            </Paper>\n        </Grid>\n    )\n}\n\nexport default VideoItem","export function formatViewCount(viewCount) {\n  if (viewCount > 999 && viewCount <= 999999) {\n    return `${Math.round(viewCount / 1000)}K`\n  } else if (viewCount >= 1000000) {\n      return `${Math.round(viewCount / 1000000)}M`\n  } else {\n      return viewCount\n  }\n}","import React from 'react'\nimport { Grid } from '@material-ui/core'\nimport VideoItem from './VideoItem'\nimport '../style.css'\n\nconst VideoList = ({ videos, onVideoSelect }) => {\n\n    const listOfVideos = videos.map((video, id) => <VideoItem onVideoSelect={onVideoSelect} key={id} video={video} />)\n\n    return (\n        <Grid container spacing={2}>\n          {listOfVideos}\n        </Grid>\n    )\n}\n\nexport default VideoList","import React from 'react'\nimport { Grid, Typography, Switch } from '@material-ui/core'\n\nconst DarkMode = ({onChange}) => {\n    return (\n        <Grid alignItems=\"center\" justify=\"center\" container spacing={2}>\n            <Typography>Dark Mode</Typography>\n            <Switch onChange={onChange} color=\"primary\"></Switch>\n        </Grid>\n    )\n}\n\nexport default DarkMode","import axios from \"axios\"\n\nexport default axios.create({\n  baseURL: 'https://www.googleapis.com/youtube/v3',\n})","import React from 'react'\nimport { Grid, MuiThemeProvider, createMuiTheme } from '@material-ui/core'\nimport { Helmet } from \"react-helmet\";\nimport { SearchBar, VideoDetail, VideoList, DarkMode } from './components'\nimport youtube from './api/youtube'\nimport './style.css'\n\n//console.log(process.env.REACT_APP_API_KEY)\n\nclass App extends React.Component {\n    state = {\n        videos: [],\n        selectedVideo: null,\n        darkMode: false\n    }\n\n    componentDidMount() {\n        this.handleSubmit('javascript')\n    }\n\n    onVideoSelect = (video) => {\n        this.setState({ selectedVideo: video })\n    }\n\n    handleChange = () => {\n        this.setState({\n            darkMode: !this.state.darkMode\n        })\n    }\n\n    handleSubmit = async (searchTerm) => {\n        // Get 5 search results based on search query\n        const responseSnippet = await youtube.get('search', {\n            params: {\n                part: 'snippet',\n                maxResults: 5,\n                key: process.env.REACT_APP_API_KEY,\n                type: 'video',\n                q: searchTerm\n            }\n        })\n\n        const items = responseSnippet.data.items\n\n        // Get view count, likes, dislikes for each video\n        const responseStats = await youtube.get('videos', {\n            params: {\n                part: 'snippet, statistics',\n                id: items.map((item) => item.id.videoId).join(\",\"),\n                key: process.env.REACT_APP_API_KEY,\n            }\n        })\n\n        // Get channel data\n        const responseChannel = await youtube.get('channels', {\n            params: {\n                part: 'snippet',\n                id: items.map((item) => item.snippet.channelId).join(\",\"),\n                key: process.env.REACT_APP_API_KEY,\n            }\n        })\n\n        // Change name of responseChannel's snippet property so it will not overwrite responseSnippet's snippet property\n        responseChannel.data.items.map((item) =>  {\n            item.channelSnippet = item.snippet\n            delete item.snippet\n        })\n\n        // Create single object with properties from each request\n        let responseTotal = items.map(video =>\n            Object.assign(\n                {},\n                video,\n                responseStats.data.items.find(stat => stat.id === video.id.videoId),\n                responseChannel.data.items.find(channel => channel.id === video.snippet.channelId).channelSnippet\n            )\n        )\n\n        this.setState({\n            videos: responseTotal,\n            selectedVideo: responseTotal[0]\n        })\n    }\n\n    render() {\n\n        const { selectedVideo, videos, darkMode } = this.state\n        const { handleChange } = this.props\n\n        const theme = createMuiTheme({\n            palette: {\n                type: 'dark',\n            },\n        })\n\n        return (\n            <MuiThemeProvider theme={darkMode ? theme : null }>\n                <Helmet>\n                    <title>\n                        {!selectedVideo ? \"YouTube Clone\" : `YouTube Clone | ${selectedVideo.snippet.title}`}\n                    </title>\n                </Helmet>\n                <Grid container spacing={4} className={darkMode ? \"darkBackground\" : null}>\n                    <Grid className=\"videoContainer\" item xs={12}>\n                        <Grid alignItems=\"center\" container spacing={2}>\n                            <Grid item xs={8}>\n                                <SearchBar onFormSubmit={this.handleSubmit} />\n                            </Grid>\n                            <Grid item xs={4}>\n                                <DarkMode onChange={this.handleChange} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={2} >\n                            <Grid item xs={8} >\n                                <VideoDetail video={selectedVideo} />\n                            </Grid>\n                            <Grid className=\"videoCard\" item xs={4}>\n                                <VideoList videos={videos} onVideoSelect={this.onVideoSelect} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </MuiThemeProvider>\n        )\n    }\n}\n\nexport default App","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}